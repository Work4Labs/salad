# chrome does not work on travis at the moment
# https://github.com/travis-ci/travis-ci/issues/938
# setup saucelabs with sauce connect:
# https://docs.saucelabs.com/ci-integrations/travis-ci/#configure-travis-ci-to-start-sauce-connect
# will work only for pull requests from salad repo branches, not from forks
language: python
env:
  global:
  - secure: NYFGMEkVVvBx8NLGcWnAkieJ11vxT4EVqN/9iQ95IF2XiswtkmUnFFRGyH1KbwaftzbXsg6S1gc79WxR2/EGBJuIHtFVsb8A7r6vedkX3dhcyjITa41uSP5EWANYdl6nsf4/u5oINXoGf/InI6jwqBpRhNV+ruq08937ZBZACek=
  - secure: TU9KI3phk22RCMMCPrSYQ7W3KY56MKJXLs0+ajYXunvP93OKOMG6XUVkkoHjMH4cm9tSe4kH64PhET8GWxJbZw8U5+5F7GEiA490Dn4D2FpwxZI+W7v2M5g1hQeSQjXnWPVhmDvkDaUvkdt97k+qJe5wdsVFdiTB9vg3JLXLOyg=
  matrix:
  - BROWSER=firefox
  - REMOTE_ARG="--remote-url=http://${SAUCE_USERNAME}:${SAUCE_ACCESS_KEY}@ondemand.saucelabs.com:80/wd/hub" BROWSER=firefox
  # due to this issue https://code.google.com/p/chromedriver/issues/detail?id=467
  # remote chrome on linux cannot handle send_keys(), so we use max osx
  - REMOTE_ARG="--remote-url=http://${SAUCE_USERNAME}:${SAUCE_ACCESS_KEY}@ondemand.saucelabs.com:80/wd/hub" BROWSER=chrome PLATFORM="OS X 10.6"
python:
- '2.7'
install:
  # print out our variables to make sure they are correct
- echo $SAUCE_USERNAME
- echo $SAUCE_ACCESS_KEY | cut -c1-9
- echo $BROWSER
- echo $REMOTE_ARG
- echo $PLATFORM
  # install the project's requirements
- python setup.py install
  # Setup headless X per http://about.travis-ci.org/docs/user/gui-and-headless-browsers/
- export DISPLAY=:99.0
- sh -e /etc/init.d/xvfb start
  # Start sauce connect tunnel
- if [ -n "$REMOTE_ARG" ]; then ./sauce_connect_setup.sh; fi
script:
# run both folders if firefox is not remote
- if [[ ! -n "$REMOTE_ARG" && $BROWSER == "firefox" ]]; then salad --browser=$BROWSER salad/not_remote_features/; fi
- if [[ ! -n "$REMOTE_ARG" && $BROWSER == "firefox" ]]; then salad --browser=$BROWSER salad/features/; fi
# run only "features" folder if firefox is remote. also run mouse feature -s1 seperately
- if [[ -n "$REMOTE_ARG" && $BROWSER == "firefox" ]]; then salad --browser=$BROWSER $REMOTE_ARG salad/features/; fi
- if [[ -n "$REMOTE_ARG" && $BROWSER == "firefox" ]]; then salad --browser=$BROWSER $REMOTE_ARG salad/features/steps-browser-mouse.feature -s1; fi
# run both folders if chrome is used
- if [[ $BROWSER == "chrome" ]]; then salad --browser=$BROWSER $REMOTE_ARG --platform="$PLATFORM" salad/features/; fi
- if [[ $BROWSER == "chrome" ]]; then salad --browser=$BROWSER $REMOTE_ARG --platform="$PLATFORM" salad/not_remote_features/; fi
